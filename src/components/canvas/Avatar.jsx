import { Canvas } from "@react-three/fiber";
import { Suspense } from "react";
import { OrbitControls, Preload } from "@react-three/drei";
import Loader from "../Loader";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/avatar.glb 
*/
import { useGLTF } from "@react-three/drei";

function Avatar() {
  const avatar = useGLTF("./models/avatar.glb");
  return (
    <>
      <OrbitControls
        autoRotate={true}
        enableZoom={false}
        maxPolarAngle={Math.PI / 2}
        minPolarAngle={Math.PI / 2}
      />
      <mesh>
        <hemisphereLight
          intensity={7}
          position={[0, 5, 1]}
          groundColor="black"
        />
        <pointLight intensity={5} position={[2, 2, 2]} />
        <primitive
          object={avatar.scene}
          scale={3}
          position-y={-5}
          rotation-y={0}
        />
      </mesh>
    </>
  );
}

const AvatarCanvas = () => {
  return (
    <Canvas
      frameloop="demand"
      gl={{ preserveDrawingBuffer: true }}
      camera={{ fov: 45, near: 0.1, far: 200, position: [-4, -2, 0] }}
    >
      <Suspense fallback={<Loader />}>
        <Avatar />
      </Suspense>
      <Preload all />
    </Canvas>
  );
};

export default AvatarCanvas;
